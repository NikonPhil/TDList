-- MySQL Script generated by MySQL Workbench
-- Sat Aug 31 19:19:26 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema to_do_list
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema to_do_list
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `to_do_list` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `to_do_list` ;

-- -----------------------------------------------------
-- Table `to_do_list`.`td_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`td_category` (
  `idtd_category` INT(11) NOT NULL AUTO_INCREMENT,
  `Category` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idtd_category`))
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
COMMENT = 'This table holds the various area\'s where a task may need to be completed - i.e. system, code, visual, database, other etc.';


-- -----------------------------------------------------
-- Table `to_do_list`.`td_class`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`td_class` (
  `idtd_class` INT(11) NOT NULL AUTO_INCREMENT,
  `class` VARCHAR(15) NOT NULL DEFAULT 'Undefined',
  PRIMARY KEY (`idtd_class`))
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
COMMENT = 'This table holds the activity that needs to be performed i.e. - Fix, modify, change etc.';


-- -----------------------------------------------------
-- Table `to_do_list`.`td_projects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`td_projects` (
  `idtd_projects` INT(11) NOT NULL AUTO_INCREMENT,
  `project_name` VARCHAR(45) NULL DEFAULT NULL,
  `project_description` VARCHAR(128) NULL DEFAULT NULL,
  PRIMARY KEY (`idtd_projects`))
ENGINE = InnoDB
AUTO_INCREMENT = 16
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
COMMENT = 'Holder for the project names and descriptions';


-- -----------------------------------------------------
-- Table `to_do_list`.`td_filename`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`td_filename` (
  `idtd_filename` INT(11) NOT NULL AUTO_INCREMENT,
  `filename` VARCHAR(45) NOT NULL,
  `idtd_project` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`idtd_filename`),
  INDEX `projects_id_idx` (`idtd_project` ASC) VISIBLE,
  CONSTRAINT `projects_id`
    FOREIGN KEY (`idtd_project`)
    REFERENCES `to_do_list`.`td_projects` (`idtd_projects`)
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 25
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
COMMENT = 'Stores the list of filenames to which tasks are relevant';


-- -----------------------------------------------------
-- Table `to_do_list`.`td_priority`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`td_priority` (
  `idtd_priority` INT(11) NOT NULL AUTO_INCREMENT,
  `priority` VARCHAR(15) NOT NULL DEFAULT 'Low',
  PRIMARY KEY (`idtd_priority`))
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
COMMENT = 'This table holds the criticality of the task - i.e. critical, high, medium, low etc.';


-- -----------------------------------------------------
-- Table `to_do_list`.`td_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`td_status` (
  `idtd_status` INT(11) NOT NULL AUTO_INCREMENT,
  `td_status` VARCHAR(15) NOT NULL DEFAULT 'Open',
  PRIMARY KEY (`idtd_status`))
ENGINE = InnoDB
AUTO_INCREMENT = 10
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
COMMENT = 'This table holds the status of a task - i.e. Open, pending, testing etc.';


-- -----------------------------------------------------
-- Table `to_do_list`.`td_tasks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`td_tasks` (
  `id_tasks` INT(11) NOT NULL AUTO_INCREMENT,
  `task` VARCHAR(45) NULL DEFAULT NULL,
  `details` MEDIUMTEXT NULL DEFAULT NULL,
  `entry_date` DATETIME NULL DEFAULT NULL,
  `complete_date` DATETIME NULL DEFAULT NULL,
  `idtd_filename` INT(11) NULL DEFAULT NULL,
  `idtd_category` INT(11) NULL DEFAULT NULL,
  `idtd_priority` INT(11) NULL DEFAULT NULL,
  `idtd_class` INT(11) NULL DEFAULT NULL,
  `idtd_status` INT(11) NULL DEFAULT NULL,
  `idtd_projects` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id_tasks`),
  INDEX `filename_ref_idx` (`id_tasks` ASC) VISIBLE,
  INDEX `fname_id_idx` (`idtd_filename` ASC) VISIBLE,
  INDEX `catecory_id_idx` (`idtd_category` ASC) VISIBLE,
  INDEX `priority_id_idx` (`idtd_priority` ASC) VISIBLE,
  INDEX `class_id_idx` (`idtd_class` ASC) VISIBLE,
  INDEX `status_id_idx` (`idtd_status` ASC) VISIBLE,
  INDEX `project_id_idx` (`idtd_projects` ASC) VISIBLE,
  CONSTRAINT `category_id`
    FOREIGN KEY (`idtd_category`)
    REFERENCES `to_do_list`.`td_category` (`idtd_category`)
    ON UPDATE CASCADE,
  CONSTRAINT `class_id`
    FOREIGN KEY (`idtd_class`)
    REFERENCES `to_do_list`.`td_class` (`idtd_class`)
    ON UPDATE CASCADE,
  CONSTRAINT `fname_id`
    FOREIGN KEY (`idtd_filename`)
    REFERENCES `to_do_list`.`td_filename` (`idtd_filename`)
    ON UPDATE CASCADE,
  CONSTRAINT `priority_id`
    FOREIGN KEY (`idtd_priority`)
    REFERENCES `to_do_list`.`td_priority` (`idtd_priority`)
    ON UPDATE CASCADE,
  CONSTRAINT `project_id`
    FOREIGN KEY (`idtd_projects`)
    REFERENCES `to_do_list`.`td_projects` (`idtd_projects`)
    ON UPDATE CASCADE,
  CONSTRAINT `status_id`
    FOREIGN KEY (`idtd_status`)
    REFERENCES `to_do_list`.`td_status` (`idtd_status`)
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 26
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
COMMENT = 'This holds a simple list of items that need to be done while building  web pages.\\\\nAction = Bug, Feature, Tidy, etc.\\\\nCategory = Database, code, visual, etc.\\\\nDetails = Basic to complex instructions on what\'s wrong or what needs doing\\\\nStatus = open, pending, closed\\\\nEntry Date = date request was opened\\\\nComplete Date = Date action was completed\\\\n';


-- -----------------------------------------------------
-- Table `to_do_list`.`td_comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`td_comments` (
  `id_comments` INT(11) NOT NULL AUTO_INCREMENT,
  `comments` VARCHAR(256) NULL DEFAULT NULL,
  `entry_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Holds the date the comment was created to allow history and traceability',
  `idtd_tasks` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id_comments`),
  INDEX `task_id_idx` (`idtd_tasks` ASC) VISIBLE,
  CONSTRAINT `task_id`
    FOREIGN KEY (`idtd_tasks`)
    REFERENCES `to_do_list`.`td_tasks` (`id_tasks`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 9
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
COMMENT = 'As tasks are progressed they may have comments associated with them.';

USE `to_do_list` ;

-- -----------------------------------------------------
-- Placeholder table for view `to_do_list`.`join_example`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`join_example` (`task` INT, `task_id` INT, `details` INT, `entry_date` INT, `project_name` INT, `project_id` INT, `filename` INT, `class` INT, `td_status` INT, `Category` INT, `priority` INT);

-- -----------------------------------------------------
-- Placeholder table for view `to_do_list`.`oldest_task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`oldest_task` (`task` INT, `entry_date` INT, `filename` INT, `project_name` INT);

-- -----------------------------------------------------
-- Placeholder table for view `to_do_list`.`task_by_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`task_by_category` (`count(task)` INT, `task` INT, `category` INT);

-- -----------------------------------------------------
-- Placeholder table for view `to_do_list`.`task_by_class`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`task_by_class` (`count(task)` INT, `task` INT, `class` INT);

-- -----------------------------------------------------
-- Placeholder table for view `to_do_list`.`task_by_project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`task_by_project` (`count(task)` INT, `task` INT, `project_name` INT);

-- -----------------------------------------------------
-- Placeholder table for view `to_do_list`.`task_by_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`task_by_status` (`count(task)` INT, `task` INT, `td_status` INT);

-- -----------------------------------------------------
-- Placeholder table for view `to_do_list`.`task_join`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`task_join` (`id_tasks` INT, `task` INT, `details` INT, `entry_date` INT, `project_name` INT, `filename` INT, `class` INT, `td_status` INT, `Category` INT, `priority` INT);

-- -----------------------------------------------------
-- Placeholder table for view `to_do_list`.`total_projects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`total_projects` (`count(idtd_projects)` INT);

-- -----------------------------------------------------
-- Placeholder table for view `to_do_list`.`total_tasks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `to_do_list`.`total_tasks` (`count(task)` INT);

-- -----------------------------------------------------
-- View `to_do_list`.`join_example`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `to_do_list`.`join_example`;
USE `to_do_list`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`pb`@`%` SQL SECURITY DEFINER VIEW `to_do_list`.`join_example` AS select `to_do_list`.`td_tasks`.`task` AS `task`,`to_do_list`.`td_tasks`.`id_tasks` AS `task_id`,`to_do_list`.`td_tasks`.`details` AS `details`,`to_do_list`.`td_tasks`.`entry_date` AS `entry_date`,`to_do_list`.`td_projects`.`project_name` AS `project_name`,`to_do_list`.`td_projects`.`idtd_projects` AS `project_id`,`to_do_list`.`td_filename`.`filename` AS `filename`,`to_do_list`.`td_class`.`class` AS `class`,`to_do_list`.`td_status`.`td_status` AS `td_status`,`to_do_list`.`td_category`.`Category` AS `Category`,`to_do_list`.`td_priority`.`priority` AS `priority` from ((`to_do_list`.`td_category` left join (`to_do_list`.`td_status` left join (`to_do_list`.`td_class` left join (`to_do_list`.`td_filename` left join (`to_do_list`.`td_projects` left join `to_do_list`.`td_tasks` on((`to_do_list`.`td_projects`.`idtd_projects` = `to_do_list`.`td_tasks`.`idtd_projects`))) on((`to_do_list`.`td_tasks`.`idtd_filename` = `to_do_list`.`td_filename`.`idtd_filename`))) on((`to_do_list`.`td_tasks`.`idtd_class` = `to_do_list`.`td_class`.`idtd_class`))) on((`to_do_list`.`td_tasks`.`idtd_status` = `to_do_list`.`td_status`.`idtd_status`))) on((`to_do_list`.`td_tasks`.`idtd_category` = `to_do_list`.`td_category`.`idtd_category`))) join `to_do_list`.`td_priority` on((`to_do_list`.`td_tasks`.`idtd_priority` = `to_do_list`.`td_priority`.`idtd_priority`)));

-- -----------------------------------------------------
-- View `to_do_list`.`oldest_task`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `to_do_list`.`oldest_task`;
USE `to_do_list`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`pb`@`%` SQL SECURITY DEFINER VIEW `to_do_list`.`oldest_task` AS select `t`.`task` AS `task`,`t`.`entry_date` AS `entry_date`,`f`.`filename` AS `filename`,`p`.`project_name` AS `project_name` from ((`to_do_list`.`td_tasks` `t` join `to_do_list`.`td_filename` `f`) join `to_do_list`.`td_projects` `p`) where ((`t`.`idtd_filename` = `f`.`idtd_filename`) and (`t`.`idtd_projects` = `p`.`idtd_projects`)) order by `t`.`entry_date`;

-- -----------------------------------------------------
-- View `to_do_list`.`task_by_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `to_do_list`.`task_by_category`;
USE `to_do_list`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `to_do_list`.`task_by_category` AS select count(`t`.`task`) AS `count(task)`,`t`.`task` AS `task`,`p`.`Category` AS `category` from (`to_do_list`.`td_tasks` `t` join `to_do_list`.`td_category` `p`) where (`t`.`idtd_category` = `p`.`idtd_category`) group by `p`.`idtd_category`;

-- -----------------------------------------------------
-- View `to_do_list`.`task_by_class`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `to_do_list`.`task_by_class`;
USE `to_do_list`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `to_do_list`.`task_by_class` AS select count(`t`.`task`) AS `count(task)`,`t`.`task` AS `task`,`p`.`class` AS `class` from (`to_do_list`.`td_tasks` `t` join `to_do_list`.`td_class` `p`) where (`t`.`idtd_class` = `p`.`idtd_class`) group by `p`.`idtd_class`;

-- -----------------------------------------------------
-- View `to_do_list`.`task_by_project`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `to_do_list`.`task_by_project`;
USE `to_do_list`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `to_do_list`.`task_by_project` AS select count(`t`.`task`) AS `count(task)`,`t`.`task` AS `task`,`p`.`project_name` AS `project_name` from (`to_do_list`.`td_tasks` `t` join `to_do_list`.`td_projects` `p`) where (`t`.`idtd_projects` = `p`.`idtd_projects`) group by `p`.`idtd_projects`;

-- -----------------------------------------------------
-- View `to_do_list`.`task_by_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `to_do_list`.`task_by_status`;
USE `to_do_list`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `to_do_list`.`task_by_status` AS select count(`t`.`task`) AS `count(task)`,`t`.`task` AS `task`,`p`.`td_status` AS `td_status` from (`to_do_list`.`td_tasks` `t` join `to_do_list`.`td_status` `p`) where (`t`.`idtd_status` = `p`.`idtd_status`) group by `p`.`idtd_status`;

-- -----------------------------------------------------
-- View `to_do_list`.`task_join`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `to_do_list`.`task_join`;
USE `to_do_list`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `to_do_list`.`task_join` AS select `to_do_list`.`td_tasks`.`id_tasks` AS `id_tasks`,`to_do_list`.`td_tasks`.`task` AS `task`,`to_do_list`.`td_tasks`.`details` AS `details`,`to_do_list`.`td_tasks`.`entry_date` AS `entry_date`,`to_do_list`.`td_projects`.`project_name` AS `project_name`,`to_do_list`.`td_filename`.`filename` AS `filename`,`to_do_list`.`td_class`.`class` AS `class`,`to_do_list`.`td_status`.`td_status` AS `td_status`,`to_do_list`.`td_category`.`Category` AS `Category`,`to_do_list`.`td_priority`.`priority` AS `priority` from ((`to_do_list`.`td_category` left join (`to_do_list`.`td_status` left join (`to_do_list`.`td_class` left join (`to_do_list`.`td_filename` left join (`to_do_list`.`td_projects` left join `to_do_list`.`td_tasks` on((`to_do_list`.`td_projects`.`idtd_projects` = `to_do_list`.`td_tasks`.`idtd_projects`))) on((`to_do_list`.`td_tasks`.`idtd_filename` = `to_do_list`.`td_filename`.`idtd_filename`))) on((`to_do_list`.`td_tasks`.`idtd_class` = `to_do_list`.`td_class`.`idtd_class`))) on((`to_do_list`.`td_tasks`.`idtd_status` = `to_do_list`.`td_status`.`idtd_status`))) on((`to_do_list`.`td_tasks`.`idtd_category` = `to_do_list`.`td_category`.`idtd_category`))) join `to_do_list`.`td_priority` on((`to_do_list`.`td_tasks`.`idtd_priority` = `to_do_list`.`td_priority`.`idtd_priority`))) order by `to_do_list`.`td_projects`.`project_name`;

-- -----------------------------------------------------
-- View `to_do_list`.`total_projects`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `to_do_list`.`total_projects`;
USE `to_do_list`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `to_do_list`.`total_projects` AS select count(`to_do_list`.`td_projects`.`idtd_projects`) AS `count(idtd_projects)` from `to_do_list`.`td_projects`;

-- -----------------------------------------------------
-- View `to_do_list`.`total_tasks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `to_do_list`.`total_tasks`;
USE `to_do_list`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `to_do_list`.`total_tasks` AS select count(`t`.`task`) AS `count(task)` from `to_do_list`.`td_tasks` `t`;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
